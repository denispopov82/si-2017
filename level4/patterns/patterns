Abstract Factory (абстрактная фабрика) (93)
Предоставляет интерфейс для создания семейств, связанных между собой, или независимых объектов, конкретные классы
которых неизвестны.

Adapter (адаптер) (141)
Преобразует интерфейс класса в некоторый другой интерфейс, ожидаемый клиентами. Обеспечивает совместную работу
классов, которая была бы невозможна без данного паттерна из за несовместимости интерфейсов.

Bridge (мост) (152)
Отделяет абстракцию от реализации, благодаря чему появляется возможность независимо изменять то и другое.

Builder (строитель) (103)
Отделяет конструирование сложного объекта от его представления, позволяя использовать один и тот же процесс
конструирования для создания
различных представлений.

Chain of Responsibility (цепочка обязанностей) (217)
Можно избежать жесткой зависимости отправителя запроса от его получателя, при этом запросом начинает  обрабатываться
один из нескольких объектов. Объекты получатели связываются в цепочку, и запрос передается по цепочке, пока какой то
объект его не обработает.

Command (команда) (226)
Инкапсулирует запрос в виде объекта, позволяя тем самым параметризовывать клиентов типом запроса, устанавливать
очередность запросов, протоколировать их и поддерживать отмену выполнения операций.

Composite (компоновщик) (162)
Группирует объекты в древовидные структуры для представления иерархий типа «часть целое». Позволяет клиентам работать
 с единичными объектами так же, как с группами объектов.

Decorator (декоратор) (173)
Динамически возлагает на объект новые функции. Декораторы применяются для расширения имеющейся функциональности и
являются гибкой альтернативой порождению подклассов.

Facade (фасад) (183)
Предоставляет унифицированный интерфейс к множеству интерфейсов в некоторой подсистеме. Определяет интерфейс более
высокого уровня, облегчающий работу с подсистемой.

Factory Method (фабричный метод) (111)
Определяет интерфейс для создания объектов, при этом выбранный класс
инстанцируется подклассами.

Flyweight (приспособленец) (191)
Использует разделение для эффективной поддержки большого числа мел
ких объектов.

Interpreter (интерпретатор) (236)
Для заданного языка определяет представление его грамматики, а также
интерпретатор предложений языка, использующий это представление.

Iterator (итератор) (173)
Дает возможность последовательно обойти все элементы составного
объекта, не раскрывая его внутреннего представления.

Mediator (посредник) (263)
Определяет объект, в котором инкапсулировано знание о том, как взаимо
действуют объекты из некоторого множества. Способствует уменьшению
числа связей между объектами, позволяя им работать без явных ссылок
друг на друга. Это, в свою очередь, дает возможность независимо изменять
схему взаимодействия.

Memento (хранитель) (272)
Позволяет, не нарушая инкапсуляции, получить и сохранить во внешней
памяти внутреннее состояние объекта, чтобы позже объект можно было
восстановить точно в таком же состоянии.

Observer (наблюдатель) (281)
Определяет между объектами зависимость типа один ко многим, так что
при изменении состоянии одного объекта все зависящие от него получают
извещение и автоматически обновляются.

Prototype (прототип) (121)
Описывает виды создаваемых объектов с помощью прототипа и создает
новые объекты путем его копирования.

Proxy (заместитель) (203)
Подменяет другой объект для контроля доступа к нему.

Singleton (одиночка) (130)
Гарантирует, что некоторый класс может иметь только один экземпляр,
и предоставляет глобальную точку доступа к нему.

State (состояние) (291)
Позволяет объекту варьировать свое поведение при изменении внутренне
го состояния. При этом создается впечатление, что поменялся класс объекта.

Strategy (стратегия) (300)
Определяет семейство алгоритмов, инкапсулируя их все и позволяя под
ставлять один вместо другого. Можно менять алгоритм независимо от
клиента, который им пользуется.

Template Method (шаблонный метод) (309)
Определяет скелет алгоритма, перекладывая ответственность за некото
рые его шаги на подклассы. Позволяет подклассам переопределять шаги
алгоритма, не меняя его общей структуры.

Visitor (посетитель) (314)
Представляет операцию, которую надо выполнить над элементами объек
та. Позволяет определить новую операцию, не меняя классы элементов,
к которым он применяется.
